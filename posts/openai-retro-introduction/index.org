#+BEGIN_COMMENT
.. title: OpenAI Retro Introduction
.. slug: openai-retro-introduction
.. date: 2018-07-08 19:27:27 UTC-07:00
.. tags: openai retro reinforcementlearning
.. category: OpenAI
.. link: 
.. description: Trying out OpenAI Retro
.. type: text
#+END_COMMENT

* Introduction
  [[https://github.com/openai/retro][OpenAI Retro]] turns video game emulators into gym environments. This allows you to train a learner using video games from supported consoles (like the Atari 2600).

* Imports
  Instead of importing =gym= in this case you import =retro=.

#+BEGIN_SRC python :session retro :results none
# from pypi
import retro
#+END_SRC

* The Environment
  It looks a lot like the way you run =gym=. First you make the environment and reset it.

#+BEGIN_SRC python :session retro :results none
environment = retro.make(game="Airstriker-Genesis", state="Level1")
observation = environment.reset()
#+END_SRC

You can see all the available games using =retro.list_games()=.

#+BEGIN_SRC python :session retro :results none
for game in retro.list_games()[:5]:
    print(game)
#+END_SRC

#+BEGIN_EXAMPLE
: BankHeist-Atari2600
: SuperThunderBlade-Genesis
: DynamiteHeaddy-Genesis
: GalaxyForceII-Genesis
: SonicTheHedgehog-Genesis
#+END_EXAMPLE

To see the available initial states you use =retro.list_states=.

#+BEGIN_SRC python :session retro :results output
print(retro.list_states("Airstriker-Genesis"))
#+END_SRC

#+BEGIN_EXAMPLE
: ['Level1']
#+END_EXAMPLE

So in this case there's only one option for us.

* Running It
  As with the =gym= environments, with retro you sample the environment to get the next action and then pass it to the =step= method.

#+BEGIN_SRC python :session retro :results none
for step in range(1, 10**3):
    environment.render()
    action = environment.action_space.sample()
    observation, reward, done, info = environment.step(action)
    if done:
        print("It took {} steps to finish this episode".format(step))
        break
#+END_SRC

When you run it it will pop up a screen showing the game being played (sped up four times).

[[file:airstriker-genesis.png]]
